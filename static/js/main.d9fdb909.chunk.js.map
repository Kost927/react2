{"version":3,"sources":["Components/Statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.js","Components/SectionTitle/SectionTitle.js","Components/App.js","index.js"],"names":["Statistics","good","neutral","bad","totalFeedbacks","positiveFeedback","isNaN","toFixed","FeedbackOptions","onLeaveFeedback","type","onClick","name","SectionTitle","children","App","state","changeState","e","target","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"4MA0CeA,EAvCI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,eACAC,EACI,EADJA,iBAEA,OACE,oCACE,0CAEA,4BACE,4BACE,uCACA,8BAAOJ,IAET,4BACE,0CACA,8BAAOC,IAET,4BACE,sCACA,8BAAOC,IAET,4BACE,wCACA,8BAAOC,IAET,4BACE,oDACA,8BACGE,MAAMD,GAAoB,EAAIA,EAAiBE,QAAQ,GAD1D,SCdKC,EAhBS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,oCACE,4BAAQC,KAAK,SAASC,QAASF,EAAiBG,KAAK,QAArD,QAGA,4BAAQF,KAAK,SAASC,QAASF,EAAiBG,KAAK,WAArD,WAGA,4BAAQF,KAAK,SAASC,QAASF,EAAiBG,KAAK,OAArD,SCASC,EATM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OACE,oCACE,qDACCA,ICgCQC,E,4MAjCbC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPc,YAAc,SAAAC,GACZ,IAAMN,EAAOM,EAAEC,OAAOP,KAEtB,EAAKQ,UAAS,SAAAC,GAAS,sBAAQT,EAAOS,EAAUT,GAAQ,O,uDAKxD,IAAMR,EAAiBkB,KAAKN,MAAMf,KAAOqB,KAAKN,MAAMd,QAAUoB,KAAKN,MAAMb,IACnEE,EAAoBiB,KAAKN,MAAMf,KAAOG,EAAkB,IAE9D,OACE,oCACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAiBK,gBAAiBa,KAAKL,cACvC,kBAAC,EAAD,CACEhB,KAAMqB,KAAKN,MAAMf,KACjBC,QAASoB,KAAKN,MAAMd,QACpBC,IAAKmB,KAAKN,MAAMb,IAChBC,eAAgBA,EAChBC,iBAAkBA,U,GA1BZkB,aCAlBC,IAASC,OACP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.d9fdb909.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  totalFeedbacks,\n  positiveFeedback,\n}) => {\n  return (\n    <>\n      <h2>Statistics</h2>\n\n      <ul>\n        <li>\n          <span>Good:</span>\n          <span>{good}</span>\n        </li>\n        <li>\n          <span>Neutral:</span>\n          <span>{neutral}</span>\n        </li>\n        <li>\n          <span>Bad:</span>\n          <span>{bad}</span>\n        </li>\n        <li>\n          <span>Total:</span>\n          <span>{totalFeedbacks}</span>\n        </li>\n        <li>\n          <span>Positive feedback:</span>\n          <span>\n            {isNaN(positiveFeedback) ? 0 : positiveFeedback.toFixed(1)}%\n          </span>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  totalFeedbacks: PropTypes.number,\n  positiveFeedback: PropTypes.number,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\n  return (\n    <>\n      <button type=\"button\" onClick={onLeaveFeedback} name=\"good\">\n        Good\n      </button>\n      <button type=\"button\" onClick={onLeaveFeedback} name=\"neutral\">\n        Neutral\n      </button>\n      <button type=\"button\" onClick={onLeaveFeedback} name=\"bad\">\n        Bad\n      </button>\n    </>\n  );\n};\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  onClick: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SectionTitle = ({ children }) => {\n  return (\n    <>\n      <h1>Please leave feedback</h1>\n      {children}\n    </>\n  );\n};\n\nexport default SectionTitle;\n\n\nSectionTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { Component } from \"react\";\nimport Statistics from \"./Statistics/Statistics\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport SectionTitle from \"./SectionTitle/SectionTitle\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n  changeState = e => {\n    const name = e.target.name;\n    // e.persist();\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n    // this.setState(prevState => ({ [e.target.name]: prevState[e.target.name] + 1 }))\n  };\n\n  render() {\n    const totalFeedbacks = this.state.good + this.state.neutral + this.state.bad;\n    const positiveFeedback = (this.state.good / totalFeedbacks) * 100;\n\n    return (\n      <>\n        <SectionTitle>\n          <FeedbackOptions onLeaveFeedback={this.changeState} />\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            totalFeedbacks={totalFeedbacks}\n            positiveFeedback={positiveFeedback}\n          />\n        </SectionTitle>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}